{"version":3,"sources":["components/NavBar.js","components/ColorChange.js","components/Tasks/TaskAdd.js","components/Tasks/Task.js","components/Tasks/Tasks.js","App.js","index.js"],"names":["Navbar","Component","ColorChange","colors","value","label","useState","setColor","colorValue","options","onChange","event","TaskAdd","className","type","this","props","changed","placeholder","Button","onClick","clicked","Task","task","remove","Tasks","tasks","map","index","App","state","tasksRemain","addTask","darkMode","onChangeHandler","setState","target","addTaskHandler","removeTaskHandler","beforeTasks","slice","afterTasks","console","log","numTasks","length","ReactDOM","render","document","getElementById"],"mappings":"0MAeeA,E,4JAXX,WACI,OACI,mCACA,iCACI,mD,GALKC,a,gBCyCNC,MAzCf,WACE,IAAMC,EAAS,CACb,CACEC,MAAO,EACPC,MAAO,QAET,CACED,MAAO,EACPC,MAAO,QAET,CACED,MAAO,EACPC,MAAO,SAET,CACED,MAAO,EACPC,MAAO,UAET,CACED,MAAO,EACPC,MAAO,WApBU,EAwBUC,mBAASH,EAAOE,OAxB1B,mBAwBdE,EAxBc,KAwBJC,EAxBI,KA8BrB,OACE,gCACE,kEAAmCD,KACnC,cAAC,IAAD,CAAQE,QAASN,EAAQO,SAPT,SAACC,GACnBH,EAAWG,EAAMN,UAOf,iCACE,0DAA6BE,W,QCjBtBK,E,4JAjBb,WACE,OACE,sBAAKC,UAAU,WAAf,UACE,2CAEA,uBACEC,KAAK,OACLJ,SAAUK,KAAKC,MAAMC,QACrBC,YAAY,oBAGd,cAACC,EAAA,EAAD,CAAQC,QAASL,KAAKC,MAAMK,QAA5B,wB,GAZcpB,aCSPqB,EAVF,SAACN,GACZ,OACE,+BACE,4BAAIA,EAAMO,OAEV,wBAAQH,QAASJ,EAAMQ,OAAvB,2BCeSC,EAnBD,SAACT,GACb,OACE,sBAAKH,UAAU,cAAf,UACE,oDACA,6BACGG,EAAMU,MAAMC,KAAI,SAACJ,EAAMK,GACtB,OACE,cAAC,EAAD,CACEJ,OAAQ,kBAAMR,EAAMQ,OAAOI,IAC3BL,KAAMA,GACDK,YCqDJC,E,4MA1DbC,MAAQ,CACNC,YAAa,CAAC,aAAc,YAC5BC,QAAS,GACTC,UAAU,G,EAIZC,gBAAkB,SAACvB,GACjB,EAAKwB,SAAS,CACZH,QAASrB,EAAMyB,OAAOhC,S,EAK1BiC,eAAiB,WACf,EAAKF,SAAS,CACZJ,YAAY,GAAD,mBAAM,EAAKD,MAAMC,aAAjB,CAA8B,EAAKD,MAAME,UACpDA,QAAS,M,EAKbM,kBAAoB,SAACV,GACnB,IAAMW,EAAc,EAAKT,MAAMC,YAAYS,MAAM,EAAGZ,GAC9Ca,EAAa,EAAKX,MAAMC,YAAYS,MAAMZ,EAAQ,GAClDF,EAAK,sBAAOa,GAAP,YAAuBE,IAClCC,QAAQC,IAAIjB,GACZ,EAAKS,SAAS,CAAEJ,YAAaL,K,4CAG/B,WACE,IAAIkB,EAAW7B,KAAKe,MAAMC,YAAYc,OACtC,OACE,mCACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACE5B,QAASF,KAAKmB,gBACdb,QAASN,KAAKsB,eACdb,OAAQT,KAAKuB,oBAGD,IAAbM,EACC,yCAEA,cAAC,EAAD,CACElB,MAAOX,KAAKe,MAAMC,YAClBP,OAAQT,KAAKuB,kBACbL,SAAUlB,KAAKe,MAAMG,oB,GAnDjBhC,a,MCAlB6C,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,W","file":"static/js/main.aacf13df.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Navbar extends Component {\n    render() {\n        return(\n            <>\n            <header>\n                <h1> ToDoApp </h1>\n                \n            </header>\n            </>\n        )\n    }\n}\nexport default Navbar;","import React, { useState } from \"react\";\nimport Select from \"react-select\";\n\nfunction ColorChange() {\n  const colors = [\n    {\n      value: 1,\n      label: \"blue\",\n    },\n    {\n      value: 2,\n      label: \"pink\",\n    },\n    {\n      value: 3,\n      label: \"green\",\n    },\n    {\n      value: 4,\n      label: \"purple\",\n    },\n    {\n      value: 5,\n      label: \"orange\",\n    },\n  ];\n\n  const [setColor, colorValue] = useState(colors.label);\n\n  const handleColor = (event) => {\n    colorValue(event.label);\n  };\n\n  return (\n    <div>\n      <style>{`body {background-color: ${setColor}`}</style>\n      <Select options={colors} onChange={handleColor}></Select>\n      <center>\n        <b>The background color is: {setColor}</b>\n      </center>\n    </div>\n  );\n}\n\nexport default ColorChange;\n","import React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nclass TaskAdd extends Component {\n  render() {\n    return (\n      <div className=\"task-add\">\n        <h1>Add Task:</h1>\n\n        <input\n          type=\"text\"\n          onChange={this.props.changed}\n          placeholder=\"Enter Task here\"\n        ></input>\n\n        <Button onClick={this.props.clicked}>Add</Button>\n      </div>\n    );\n  }\n}\n\nexport default TaskAdd;\n","import React from \"react\";\n\nconst Task = (props) => {\n  return (\n    <li>\n      <p>{props.task}</p>\n\n      <button onClick={props.remove}>Completed</button>\n    </li>\n  );\n};\n\nexport default Task;\n","import React from \"react\";\nimport Task from \"./Task\";\n\nconst Tasks = (props) => {\n  return (\n    <div className=\"task-remain\">\n      <h1> To be completed: </h1>\n      <ul>\n        {props.tasks.map((task, index) => {\n          return (\n            <Task\n              remove={() => props.remove(index)}\n              task={task}\n              key={index}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default Tasks;\n","import React, { Component } from \"react\";\nimport Navbar from \"./components/NavBar\";\nimport ColorChange from \"./components/ColorChange\";\nimport TaskAdd from \"./components/Tasks/TaskAdd\";\nimport Tasks from \"./components/Tasks/Tasks\";\n\nclass App extends Component {\n  // state component\n  state = {\n    tasksRemain: [\"Walk Doggo\", \"Shopping\"],\n    addTask: \"\",\n    darkMode: false,\n  };\n\n  // Assigns Value in the Input field\n  onChangeHandler = (event) => {\n    this.setState({\n      addTask: event.target.value,\n    });\n  };\n\n  // Adds Task to the array\n  addTaskHandler = () => {\n    this.setState({\n      tasksRemain: [...this.state.tasksRemain, this.state.addTask],\n      addTask: \"\",\n    });\n  };\n\n  // Removes tasks from the tasks array\n  removeTaskHandler = (index) => {\n    const beforeTasks = this.state.tasksRemain.slice(0, index);\n    const afterTasks = this.state.tasksRemain.slice(index + 1);\n    const tasks = [...beforeTasks, ...afterTasks];\n    console.log(tasks);\n    this.setState({ tasksRemain: tasks });\n  };\n\n  render() {\n    let numTasks = this.state.tasksRemain.length;\n    return (\n      <>\n        <div>\n          <Navbar />\n          <ColorChange />\n          <TaskAdd\n            changed={this.onChangeHandler}\n            clicked={this.addTaskHandler}\n            remove={this.removeTaskHandler}\n          />\n\n          {numTasks === 0 ? (\n            <p>No Tasks</p>\n          ) : (\n            <Tasks\n              tasks={this.state.tasksRemain}\n              remove={this.removeTaskHandler}\n              darkMode={this.state.darkMode}\n            />\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n"],"sourceRoot":""}